
import java.util.PriorityQueue;
import java.util.Random;

public class AirCraftFactory {

	protected static final int SEED = 10;
	protected static final int lowFuel = 5;

	protected static double fuel;
	protected static Random rand = new Random();
	protected static PriorityQueue<AirCraft> Priorityqueue; //if fuel is low of rlanding aircraft add to PQ

	//static ArrayList<Plane> listPlanes = new ArrayList<Plane>(); // this should be a priority queue in runway class

	//statics only exist in a single existance 


	//private static long seedTime = System.currentTimeMillis(); good idea to implement after testing

	protected static double minVal = 0.006; //spawn value
	protected static double maxVal = 0.001; //spawn value
	protected static double generate;
	protected static Random spawn = new Random(SEED);

	protected static int fuelMax = 10;
	protected static int fuelMin = 1;
	protected static int fuelVal;



	public AirCraftFactory(int seed) {
		//buildPlanes();


	}

	/**
	 * @return randomy generated fuel level between 1 to 10
	 */
	public static int getFuelVal(){
		fuelVal = rand.nextInt(fuelMax) + fuelMin;
		return fuelVal;
	}

	public static double gen(){
		generate = minVal + (maxVal - minVal) * spawn.nextDouble();
		return generate;
	}

	public static String genToString(){
		String temp = String.valueOf(gen());
		temp = temp.substring(0, Math.min(temp.length(), 5));
		return temp;
	}

	public static void getFuel(){
		for(int i = 0; i < Simulation.getRunTime(); i++){
			System.out.println(getFuelVal());
		}

	}


	/**
	 * Generate AirCrafts 
	 */
	public static void genPlanes(){
		for(int i = 0; i < Simulation.getRunTime(); i++){
			if(genToString().equals(LightAircraft.getSpawnValue())){
				AirCraft light = new LightAircraft();
				if(getFuelVal() < lowFuel){
					Runway.addToPriorityQueue(light);
					System.out.println("Trying to add Light aircraft to priority, with fuel level at " + getFuelVal());

				}else{
					Runway.addToQueueCheck(light);
				}


			}else if(genToString().equals(Glider.getSpawnValue())){
				AirCraft glider = new Glider();
				if(getFuelVal() < lowFuel){
					Runway.addToPriorityQueue(glider);
					System.out.println("Trying to add Glider to priority, with fuel level at " + getFuelVal());
				}else{
					Runway.addToQueueCheck(glider);
				}
			}else if(genToString().equals(CommercialFlight.pToString())){
				AirCraft comFlight = new CommercialFlight();
				if(getFuelVal() < lowFuel){
					Runway.addToPriorityQueue(comFlight);
					System.out.println("Trying to add CommercialFlight to priority, with fuel level at " + getFuelVal());
				}else{
					Runway.addToQueueCheck(comFlight);
				}
			}
		}
	}

	public static void decrementFuel(){
		fuelVal--;
	}

}
