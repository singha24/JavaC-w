import java.util.PriorityQueue;
import java.util.Queue;
import java.util.LinkedList;

public class Runway {
	// queue for taking off planes 
	private  LinkedList<AirCraft> runwayQueue; //priority queue or linked list, which one?, first two lines in runway constructor
	//queue for landing planes
	private  LinkedList<AirCraft> airBorneQueue; //priority queue or linked list, which one?, first two lines in runway constructor
	private Counter counter;
	private boolean isClear;



	public Runway() {
		runwayQueue = new  PriorityQueue<AirCraft>(); //priority queue or linked list, which one?
		airBorneQueue = new  PriorityQueue<AirCraft>(); //priority queue or linked list, which one?
		counter = new Counter(); //i think counters are supposed to be put into the lists with the aircraft, and it needs a name(String) passed as parameter
		isClear = true;
	}

	public void run(){

		for (AirCraft aircraft : runwayQueue.toArray(new AirCraft[runwayQueue.size()])){ 
			aircraft.fly();
			runwayQueue.add(aircraft);
			counter.incrementWaitTime();//aircraft.getWaitingTime());
		}

		for (AirCraft  aircraft : airBorneQueue.toArray(new AirCraft[airBorneQueue.size()])) {

			aircraft.fly();
			airBorneQueue.add(aircraft);
			counter.incrementWaitTime();//aircraft.getWaitingTime());
		}

	}

	public  LinkedList<AirCraft> getAirborneQueue(){
		return airBorneQueue;
	}
	public  LinkedList<AirCraft> getRunwayQueue() {
		return runwayQueue ;
	}

	public Counter getCounter() {
		return counter;
	}

	public boolean isClear() {
		return isClear;
	}

	public void setClear(boolean isClear) {
		this.isClear = isClear;
	}

	public void clearRunway() {
		counter.reset(); //changed from clear to reset (thats what i called it in my counter)
		airBorneQueue.clear();
		runwayQueue.clear();
	}
}
